<!DOCTYPE html>
<html>
  <head>
    <title>Omegle Chat</title>
    <link rel="stylesheet" href="https://bootswatch.com/4/lumen/bootstrap.min.css">
    <script src="//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js" integrity="sha256-BbhdlvQf/xTY9gja0Dq3HiwQF8LaCRTXxZKRutelT44=" crossorigin="anonymous"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jqueryui/1.12.1/jquery-ui.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/knockout/3.4.2/knockout-min.js"></script>
    <script src="//cdnjs.cloudflare.com/ajax/libs/socket.io/2.0.4/socket.io.js" integrity="sha256-WPeFPWD3PZQUDrpFnDM1N2KadNVwCfNS4cCZ78b76T8=" crossorigin="anonymous"></script>
    <script src="//cdnjs.cloudflare.com/ajax/libs/underscore.js/1.8.3/underscore.js" integrity="sha256-SzKOQsVYGX1bmddyfPzGC6yXY/rWYGUSMOi6+T9gZ+0=" crossorigin="anonymous"></script>
    <style>
      .event {
        font-style: italic;
        color: #BBB;
      }
      .chat-message {
        font-size: 1.1em;
      }
      .chat-message.Bot strong {
        color: #3080CF;
      }
      .chat-message.Me strong {
        color: purple;
      }
      .chat-message.Stranger strong {
        color: orangered;
      }
    </style>
    <script type="text/javascript">
    var omegleBot = new (function(){
      var self = this;

      this.socket = null;

      this.chatLog = ko.observable("");
      this.customMessage = ko.observable("");
      this.connected = ko.observable(false);

      var hidden, visibilityState, visibilityChange, focused = true;

      if (typeof document.hidden !== "undefined") {
        hidden = "hidden", visibilityChange = "visibilitychange", visibilityState = "visibilityState";
      } else if (typeof document.msHidden !== "undefined") {
        hidden = "msHidden", visibilityChange = "msvisibilitychange", visibilityState = "msVisibilityState";
      }

      var document_hidden = document[hidden];

      document.addEventListener(visibilityChange, function() {
        if(document_hidden != document[hidden]) {
          if(document[hidden]) {
            // Document hidden
            focused = false;
          } else {
            // Document shown
            focused = true;
            document.title = "Omegle Chat";
          }

          document_hidden = document[hidden];
        }
      });

      this.startTyping = _.throttle(function(){
        self.socket.emit("message", { action: "startTyping" });
      });

      this.messageEventHandler = function(viewModel, event){
        if ( event.keyCode == 13 ){
          if ( self.customMessage() != "" ){
            self.socket.emit("message", { action: "message", text: self.customMessage() });
            self.customMessage("");
          }          
          self.socket.emit("message", { action: "stopTyping" });
        } else {
          self.startTyping();
        }
      };

      _.templateSettings = {
        interpolate: /\{\{(.+?)\}\}/g
      };
      var eventTemplate = _.template('<div class="event">{{ event }}</div>');
      var messageTemplate = _.template('<div class="chat-message {{source}}"><strong>{{ source }}</strong> {{ message }}</div>');
      /*
        Desired Functionality:
        train stranger messages for spam
        train stranger messages with response
      */
      var strangerTemplate = _.template('<div class="chat-message {{source}}"><strong>{{ source }}</strong> <a href="#" onclick="omegleBot.options(this)">{{ message }}</a></div>');

      this.activeMessage = null;
      var dropdown = $("#dropdownOptions");
      this.options = function(anchor){
        self.activeMessage = anchor.innerHTML;        
        $("#dropdownOptions").toggle();
        $("#dropdownOptions").position({
          of: $( anchor ),
          my: "left top",
          at: "right bottom"
        });
        console.log("options", arguments);
      };

      this.train = function(){
        //self.socket.emit("message", { "action": "trainResponse", "text": self.activeMessage });
      };

      this.openLink = function(){
        $("#dropdownOptions").hide();
        window.open(self.activeMessage, "_blank");
      };

      this.markSpam = function(){
        $("#dropdownOptions").hide();
        self.socket.emit("message", { "action": "markSpam", "text": self.activeMessage });
      };

      this.init = function(){
        ko.applyBindings(self);
        
        self.socket = io();

        self.socket.on('connection', function(socket){
          console.log('connected');
        });

        var chatLogSection = $("#chatLog");
        self.socket.on('event', function(event){
          console.log("event", event);
          if ( event.event.indexOf("connected to stranger") > -1 && self.chatLog() != "" ){
            self.socket.emit("message",{ action:"saveChat", chat: self.chatLog() });
            self.chatLog("");
          }
          self.chatLog(self.chatLog() + eventTemplate(event));
          chatLogSection.scrollTop(chatLogSection[0].scrollHeight);
        });

        self.socket.on('chat', function(chat){
          console.log("chat", chat);
          if ( chat.source == "Stranger"){
            self.chatLog(self.chatLog() + strangerTemplate(chat));
            if (!focused){
              document.title = "-New Message-";
            }
          } else {
            self.chatLog(self.chatLog() + messageTemplate(chat));
          }          
          chatLogSection.scrollTop(chatLogSection[0].scrollHeight);
        });

      };

      this.disconnect = function(){
          console.log("emit disconnect");
          self.socket.emit("message", { "action": "disconnect" });
      };

      this.toggleConnection = function(){
          console.log("emit connect");
          self.socket.emit("message", { "action": "connect" });
      };

      this.toggleAI = function(){
          console.log("emit toggleAI");
          self.socket.emit("message", { "action": "toggleAI" });
      };

    });
    $(document).ready(omegleBot.init);
    </script>
  </head>
  <body>
      <div id="dropdownOptions" class="dropdown-menu" aria-labelledby="btnGroupDrop1" x-placement="bottom-start" style="position: absolute; transform: translate3d(0px, 34px, 0px); top: 0px; left: 0px; will-change: transform;">
        <a class="dropdown-item" data-bind="click: markSpam">Mark as Spam</a>
        <a class="dropdown-item" data-bind="click: train">Train Response</a>
        <a class="dropdown-item" data-bind="click: openLink">Open Link</a>
      </div>
      <div class="card border-primary col-12">
        <div class="card-body">
          <h4 class="card-title">Chat Log</h4>
          <p class="card-text" id="chatLog" data-bind="html: chatLog" style="min-height: 250px; height: 700px; overflow-y: scroll;"></p>
        </div>
        <div class="card-footer">
            <input type="text" data-bind="value: customMessage, event: { keyup: messageEventHandler }" class="form-control">
        </div>
        <div class="card-header">          
            <button class="btn btn-default" data-bind="click: toggleConnection">Connect</button>
            <button class="btn btn-default" data-bind="click: disconnect">Disconnect</button>
            <button class="btn btn-default" data-bind="click: toggleAI">Toggle Bot</button>
          </div>
      </div>
  </body>
</html>
